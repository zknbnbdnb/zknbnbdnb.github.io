{"name":"模拟","slug":"模拟","count":7,"postlist":[{"title":"LeetCode第1700题：无法吃午餐的学生数量","uid":"06da0c8cc991f9bc52c577bd89acffa5","slug":"LeetCode第1700题：无法吃午餐的学生数量","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-19T08:07:08.996Z","comments":true,"path":"api/articles/LeetCode第1700题：无法吃午餐的学生数量.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/19/951c8e1acd9f8324.png","text":"1700.无法吃午餐的学生数量题目信息 种类 难度 标签 喜欢 算法 Easy 栈，模拟 No 题目要求学校的自助午餐提供圆形和方形的三明治，分别用数字 0 和 1 表示。所有学生站在一个队列里，每个学生要么喜欢圆形的要么喜欢方形的。 餐厅里三明治的数量与学生的数量相同。所有三明...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":48,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":49,"path":"api/tags/力扣.json"},{"name":"栈","slug":"栈","count":3,"path":"api/tags/栈.json"},{"name":"模拟","slug":"模拟","count":7,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},{"title":"LeetCode第1441题：用栈操作构建数组","uid":"3f9b149edda744a0462c85c999c4b231","slug":"LeetCode第1441题：用栈操作构建数组","date":"2022-10-14T16:00:00.000Z","updated":"2022-10-16T09:39:40.974Z","comments":true,"path":"api/articles/LeetCode第1441题：用栈操作构建数组.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/15/86a2ad1d6f96ff9e.png","text":"1441.用栈操作构建数组题目信息 种类 难度 标签 喜欢 算法 Med 栈,模拟 No 题目要求给你一个数组 target 和一个整数 n。每次迭代，需要从 list = [1, 2, 3,..., n]中依次读取一个数字。请使用下述操作来构建目标数组 target ： &qu...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":48,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":49,"path":"api/tags/力扣.json"},{"name":"栈","slug":"栈","count":3,"path":"api/tags/栈.json"},{"name":"模拟","slug":"模拟","count":7,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},{"title":"LeetCode第661题：图片平滑器","uid":"f7dba2635a51e15fd0fffbe2f3d3b59e","slug":"LeetCode第661题：图片平滑器","date":"2022-10-25T16:00:00.000Z","updated":"2022-10-26T12:51:33.476Z","comments":true,"path":"api/articles/LeetCode第661题：图片平滑器.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/26/203dabd372b13d8a.png","text":"661.图片平滑器题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求图像平滑器 是大小为 3 x 3 的过滤器，用于对图像的每个单元格平滑处理，平滑处理后单元格的值为该单元格的平均灰度。 每个单元格的 平均灰度 定义为：该单元格自身及其周围的 8 个单元格的平...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":48,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":49,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":7,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},{"title":"LeetCode第868题：二进制间距","uid":"ac6fbac8b58301151c5e3f9393ea868c","slug":"LeetCode第868题：二进制间距","date":"2022-10-25T16:00:00.000Z","updated":"2022-10-26T13:03:11.705Z","comments":true,"path":"api/articles/LeetCode第868题：二进制间距.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/26/203dabd372b13d8a.png","text":"868.二进制间距题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求给定一个正整数 n，找到并返回 n 的二进制表示中两个 相邻 1 之间的 最长距离 。如果不存在两个相邻的 1，返回 0 。 如果只有 0 将两个 1 分隔开（可能不存在 0 ），则认为这两个...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":48,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":49,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":7,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},{"title":"LeetCode第657题：机器人能否返回原点","uid":"1fa7950f9ce8a9e00009e458ff2af6e1","slug":"LeetCode第657题：机器人能否返回原点","date":"2022-10-25T16:00:00.000Z","updated":"2022-10-26T12:41:12.206Z","comments":true,"path":"api/articles/LeetCode第657题：机器人能否返回原点.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/26/203dabd372b13d8a.png","text":"657.机器人能否返回原点题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求在二维平面上，有一个机器人从原点 (0, 0) 开始。给出它的移动顺序，判断这个机器人在完成移动后是否在 (0, 0) 处结束。 移动顺序由字符串 moves 表示。字符 move[i...","link":"","photos":[],"count_time":{"symbolsCount":806,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":48,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":49,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":7,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},{"title":"LeetCode第728题：自除数","uid":"34ac10ca8d0f674926a26899fec9e8e3","slug":"LeetCode第728题：自除数","date":"2022-10-25T16:00:00.000Z","updated":"2022-10-26T12:47:49.444Z","comments":true,"path":"api/articles/LeetCode第728题：自除数.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/26/203dabd372b13d8a.png","text":"728.自除数题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求自除数 是指可以被它包含的每一位数整除的数。 例如，128 是一个 自除数 ，因为 128 % 1 == 0，128 % 2 == 0，128 % 8 == 0。 除数 不允许包含 0 。 整数 ...","link":"","photos":[],"count_time":{"symbolsCount":884,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":48,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":49,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":7,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},{"title":"LeetCode第1662题：检查两个字符串组是否相等","uid":"7e4e6dc810b8551c74f0419324323453","slug":"LeetCode第1662题：检查两个字符串组是否相等","date":"2022-10-31T16:00:00.000Z","updated":"2022-11-02T13:14:04.501Z","comments":true,"path":"api/articles/LeetCode第1662题：检查两个字符串组是否相等.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/01/84244f736c16d323.png","text":"784.检查两个字符串组是否相等题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求给你两个字符串数组 word1 和 word2 。如果两个数组表示的字符串相同，返回 true ；否则，返回 false 。 数组表示的字符串 是由数组中的所有元素 按顺序 连接...","link":"","photos":[],"count_time":{"symbolsCount":708,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":48,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":49,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":7,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false}]}