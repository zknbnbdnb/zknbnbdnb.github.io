{"title":"LeetCode第915题：分割数组","uid":"0f3d1db1a99e73a2fd7bb9005e4afdd5","slug":"LeetCode第915题：分割数组","date":"2022-10-23T16:00:00.000Z","updated":"2022-10-24T14:10:08.530Z","comments":true,"path":"api/articles/LeetCode第915题：分割数组.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/24/0670870b959bb56a.png","content":"<h1 id=\"1768-分割数组\"><a href=\"#1768-分割数组\" class=\"headerlink\" title=\"1768.分割数组\"></a>1768.分割数组</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Med</strong></td>\n<td><strong>数组</strong></td>\n<td><strong>No</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>给定一个数组 <code>nums</code> ，将其划分为两个连续子数组 <code>left</code> 和 <code>right</code>， 使得：</p>\n<ul>\n<li><code>left</code> 中的每个元素都小于或等于 <code>right</code> 中的每个元素。</li>\n<li><code>left</code> 和 <code>right</code> 都是非空的。</li>\n<li><code>left</code> 的长度要尽可能小。</li>\n</ul>\n<p>在完成这样的分组后返回 <code>left</code> 的 <strong>长度</strong>。</p>\n<p>用例可以保证存在这样的划分方法。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入：nums = [5,0,3,8,6]\n输出：3\n解释：left = [5,0,3]，right = [8,6]\n</code></pre>\n<p><em>示例2.</em></p>\n<pre><code>输入：nums = [1,1,1,0,6,12]\n输出：4\n解释：left = [1,1,1,0]，right = [6,12]\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>先定义两个参数，即<code>max_num</code>和<code>left_num</code></li>\n<li>然后当当前数组元素<strong>小于</strong><code>left_num</code>时，就将<code>left_num</code>这一参数跟新为<em>左边数组最大值</em>，是为了找到分界点，以及其<strong>索引</strong><code>idx</code>也记录下来，最后答案返回其<em>索引加一</em>即可</li>\n<li>当<strong>等于</strong>时不需要考虑，因为要返回<strong>最小</strong>的left长度</li>\n<li>当<strong>大于</strong>时则将<code>max_num</code>跟新为当前<code>nums</code>里的值即可</li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def partitionDisjoint(self, nums: List[int]) -&gt; int:\n        left_max &#x3D; nums[0]\n        max_nums &#x3D; nums[0]\n        idx &#x3D; 0\n        for i in range(1, len(nums)):\n            if nums[i] &lt; left_max:\n                left_max &#x3D; max_nums\n                idx &#x3D; i\n            elif nums[i] &gt; max_nums:\n                max_nums &#x3D; nums[i]\n        return idx + 1                </code></pre>\n\n","feature":false,"text":"1768.分割数组题目信息 种类 难度 标签 喜欢 算法 Med 数组 No 题目要求给定一个数组 nums ，将其划分为两个连续子数组 left 和 right， 使得： left 中的每个元素都小于或等于 right 中的每个元素。 left 和 right 都是非空的。 l...","link":"","photos":[],"count_time":{"symbolsCount":940,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":42,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":43,"path":"api/tags/力扣.json"},{"name":"数组","slug":"数组","count":6,"path":"api/tags/数组.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1768-%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">1768.分割数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第728题：自除数","uid":"34ac10ca8d0f674926a26899fec9e8e3","slug":"LeetCode第728题：自除数","date":"2022-10-25T16:00:00.000Z","updated":"2022-10-26T12:47:49.444Z","comments":true,"path":"api/articles/LeetCode第728题：自除数.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/26/203dabd372b13d8a.png","text":"728.自除数题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求自除数 是指可以被它包含的每一位数整除的数。 例如，128 是一个 自除数 ，因为 128 % 1 == 0，128 % 2 == 0，128 % 8 == 0。 除数 不允许包含 0 。 整数 ...","link":"","photos":[],"count_time":{"symbolsCount":884,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":42,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":43,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":6,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},"next_post":{"title":"LeetCode第901题：股票价格跨度","uid":"8ad1a84233291295facf5927e913e5d3","slug":"LeetCode第901题：股票价格跨度","date":"2022-10-20T16:00:00.000Z","updated":"2022-10-21T04:33:31.734Z","comments":true,"path":"api/articles/LeetCode第901题：股票价格跨度.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/21/195c356b47ac674b.png","text":"901.股票价格跨度题目信息 种类 难度 标签 喜欢 设计 Med 单调栈 Yes 题目要求编写一个 StockSpanner 类，它收集某些股票的每日报价，并返回该股票当日价格的跨度。 今天股票价格的跨度被定义为股票价格小于或等于今天价格的最大连续日数（从今天开始往回数，包括今...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"设计","slug":"设计","count":1,"path":"api/categories/设计.json"}],"tags":[{"name":"力扣","slug":"力扣","count":43,"path":"api/tags/力扣.json"},{"name":"Like","slug":"Like","count":19,"path":"api/tags/Like.json"},{"name":"单调栈","slug":"单调栈","count":1,"path":"api/tags/单调栈.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":"ture"}}