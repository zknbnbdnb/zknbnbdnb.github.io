{"title":"LeetCode第1768题：交替合并字符串","uid":"ce7ff39df25b1011dd3142e862e198bd","slug":"LeetCode第1768题：交替合并字符串","date":"2022-10-22T16:00:00.000Z","updated":"2022-10-23T08:13:48.937Z","comments":true,"path":"api/articles/LeetCode第1768题：交替合并字符串.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/21/195c356b47ac674b.png","content":"<h1 id=\"1768-交替合并字符串\"><a href=\"#1768-交替合并字符串\" class=\"headerlink\" title=\"1768.交替合并字符串\"></a>1768.交替合并字符串</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Easy</strong></td>\n<td><strong>字符串</strong></td>\n<td><strong>No</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>给你两个字符串 <code>word1</code> 和 <code>word2</code> 。请你从 <code>word1</code> 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。</p>\n<p>返回 <strong>合并后的字符串</strong> 。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入：word1 = &quot;abc&quot;, word2 = &quot;pqr&quot;\n输出：&quot;apbqcr&quot;\n解释：字符串合并情况如下所示：\nword1：  a   b   c\nword2：    p   q   r\n合并后：  a p b q c r\n</code></pre>\n<p><em>示例2.</em></p>\n<pre><code>输入：word1 = &quot;ab&quot;, word2 = &quot;pqrs&quot;\n输出：&quot;apbqrs&quot;\n解释：注意，word2 比 word1 长，&quot;rs&quot; 需要追加到合并后字符串的末尾。\nword1：  a   b \nword2：    p   q   r   s\n合并后：  a p b q   r   s\n</code></pre>\n<p><em>示例3.</em></p>\n<pre><code>输入：word1 = &quot;abcd&quot;, word2 = &quot;pq&quot;\n输出：&quot;apbqcd&quot;\n解释：注意，word1 比 word2 长，&quot;cd&quot; 需要追加到合并后字符串的末尾。\nword1：  a   b   c   d\nword2：    p   q \n合并后：  a p b q c   d\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>分长度大小进行归并即可</li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def mergeAlternately(self, word1: str, word2: str) -&gt; str:\n        m, n &#x3D; len(word1), len(word2)\n        res &#x3D; &#39;&#39;\n        if m &gt; n:\n            for i in range(n):\n                res +&#x3D; word1[i] + word2[i]\n            res +&#x3D; word1[i + 1:]\n        else:\n            for i in range(m):\n                res +&#x3D; word1[i] + word2[i]\n            res +&#x3D; word2[i + 1:]\n        return res</code></pre>\n\n","feature":false,"text":"1768.交替合并字符串题目信息 种类 难度 标签 喜欢 算法 Easy 字符串 No 题目要求给你两个字符串 word1 和 word2 。请你从 word1 开始，通过交替添加字母来合并字符串。如果一个字符串比另一个字符串长，就将多出来的字母追加到合并后字符串的末尾。 返回 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"字符串","slug":"字符串","count":8,"path":"api/tags/字符串.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1768-%E4%BA%A4%E6%9B%BF%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">1768.交替合并字符串</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第915题：分割数组","uid":"0f3d1db1a99e73a2fd7bb9005e4afdd5","slug":"LeetCode第915题：分割数组","date":"2022-10-23T16:00:00.000Z","updated":"2022-10-25T15:52:50.671Z","comments":true,"path":"api/articles/LeetCode第915题：分割数组.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/24/0670870b959bb56a.png","text":"915.分割数组题目信息 种类 难度 标签 喜欢 算法 Med 数组 No 题目要求给定一个数组 nums ，将其划分为两个连续子数组 left 和 right， 使得： left 中的每个元素都小于或等于 right 中的每个元素。 left 和 right 都是非空的。 le...","link":"","photos":[],"count_time":{"symbolsCount":939,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"数组","slug":"数组","count":6,"path":"api/tags/数组.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},"next_post":{"title":"LeetCode第1235题：规划兼职工作","uid":"579dc2387cd95c31d214d584865cf827","slug":"LeetCode第1235题：规划兼职工作","date":"2022-10-21T16:00:00.000Z","updated":"2022-10-22T15:36:42.641Z","comments":true,"path":"api/articles/LeetCode第1235题：规划兼职工作.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/21/195c356b47ac674b.png","text":"1235.规划兼职工作题目信息 种类 难度 标签 喜欢 算法 Hard 动态规划 Yes 题目要求你打算利用空闲时间来做兼职工作赚些零花钱。 这里有 n 份兼职工作，每份工作预计从 startTime[i] 开始到 endTime[i] 结束，报酬为 profit[i]。 给你一...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"动态规划","slug":"动态规划","count":9,"path":"api/tags/动态规划.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":true}}