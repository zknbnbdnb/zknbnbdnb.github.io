{"title":"剑指 Offer 10：斐波那契数列","uid":"c62da1f5bfcfb400de5ee15d8d6a104e","slug":"LeetCode.剑指 Offer 10：斐波那契数列","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-10T11:17:30.377Z","comments":true,"path":"api/articles/LeetCode.剑指 Offer 10：斐波那契数列.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/10/c07036a6e1c46274.png","content":"<h1 id=\"剑指-Offer-10-斐波那契数列\"><a href=\"#剑指-Offer-10-斐波那契数列\" class=\"headerlink\" title=\"剑指 Offer 10.斐波那契数列\"></a>剑指 Offer 10.斐波那契数列</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Easy</strong></td>\n<td><strong>动态规划</strong></td>\n<td><strong>No</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>写一个函数，输入 <code>n</code> ，求斐波那契（Fibonacci）数列的第 <code>n</code> 项（即 <code>F(N)</code>）。斐波那契数列的定义如下：</p>\n<pre><code>F(0) = 0,   F(1) = 1\nF(N) = F(N - 1) + F(N - 2), 其中 N &gt; 1.\n</code></pre>\n<p>斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入：n = 5\n输出：5\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>只要记住前两个就能计算第三个，状态转移方程即</li>\n<li><code>dp[i] = dp[i - 1] + dp[i - 2]</code></li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def fib(self, n: int) -&gt; int:\n        dp &#x3D; [0, 1] * (n + 1)\n        for i in range(2, n + 1):\n            dp[i] &#x3D; dp[i - 1] + dp[i - 2]\n        return dp[n] % 1000000007</code></pre>\n\n","feature":false,"text":"剑指 Offer 10.斐波那契数列题目信息 种类 难度 标签 喜欢 算法 Easy 动态规划 No 题目要求写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下： F(0) = 0, F(1) = 1 F(N) = F...","link":"","photos":[],"count_time":{"symbolsCount":564,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":63,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":64,"path":"api/tags/力扣.json"},{"name":"动态规划","slug":"动态规划","count":9,"path":"api/tags/动态规划.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%91%E6%8C%87-Offer-10-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97\"><span class=\"toc-text\">剑指 Offer 10.斐波那契数列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第746题：使用最小花费爬楼梯","uid":"c7b79577f2ea1c8b47e6d7a622a64529","slug":"LeetCode第746题：使用最小花费爬楼梯","date":"2022-10-27T16:00:00.000Z","updated":"2022-10-28T14:27:14.598Z","comments":true,"path":"api/articles/LeetCode第746题：使用最小花费爬楼梯.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/26/203dabd372b13d8a.png","text":"746.使用最小花费爬楼梯题目信息 种类 难度 标签 喜欢 算法 Easy 动态规划 Yes 题目要求给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。 你可以选择从下标为 0 或下标...","link":"","photos":[],"count_time":{"symbolsCount":922,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":63,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":64,"path":"api/tags/力扣.json"},{"name":"动态规划","slug":"动态规划","count":9,"path":"api/tags/动态规划.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":true},"next_post":{"title":"剑指 Offer 15：二进制中1的个数","uid":"0c7796e25042d666946ce2853ffd4201","slug":"LeetCode.剑指 Offer 15：二进制中1的个数","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-10T11:10:58.608Z","comments":true,"path":"api/articles/LeetCode.剑指 Offer 15：二进制中1的个数.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/10/c07036a6e1c46274.png","text":"剑指 Offer 15.二进制中1的个数题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为 汉明重量)。 示例示例1. 输入：n = 11 (控制台...","link":"","photos":[],"count_time":{"symbolsCount":682,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":63,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":64,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":16,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false}}