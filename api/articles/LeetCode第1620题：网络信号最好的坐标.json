{"title":"LeetCode第1620题：网络信号最好的坐标","uid":"4a3177ea8454ccb231fecc2d43270156","slug":"LeetCode第1620题：网络信号最好的坐标","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-04T12:52:38.850Z","comments":true,"path":"api/articles/LeetCode第1620题：网络信号最好的坐标.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/01/84244f736c16d323.png","content":"<h1 id=\"1620-网络信号最好的坐标\"><a href=\"#1620-网络信号最好的坐标\" class=\"headerlink\" title=\"1620.网络信号最好的坐标\"></a>1620.网络信号最好的坐标</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Med</strong></td>\n<td><strong>枚举</strong></td>\n<td><strong>No</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>给你一个数组 <code>towers</code> 和一个整数 <code>radius</code> 。</p>\n<p>数组  <code>towers</code>  中包含一些网络信号塔，其中 <code>towers[i] = [xi, yi, qi]</code>表示第 <code>i</code> 个网络信号塔的坐标是 <code>(xi, yi)</code> 且信号强度参数为 <code>qi</code> 。所有坐标都是在  X-Y 坐标系内的 <strong>整数</strong> 坐标。两个坐标之间的距离用 <strong>欧几里得距离</strong> 计算。</p>\n<p>整数 <code>radius</code> 表示一个塔 <strong>能到达</strong> 的 <strong>最远距离</strong> 。如果一个坐标跟塔的距离在 <code>radius</code> 以内，那么该塔的信号可以到达该坐标。在这个范围以外信号会很微弱，所以 <code>radius</code> 以外的距离该塔是 <strong>不能到达的</strong> 。</p>\n<p>如果第 <code>i</code> 个塔能到达 <code>(x, y)</code> ，那么该塔在此处的信号为 <code>⌊qi / (1 + d)⌋</code> ，其中 <code>d</code> 是塔跟此坐标的距离。一个坐标的 <strong>信号强度</strong> 是所有 <strong>能到达</strong> 该坐标的塔的信号强度之和。</p>\n<p>请你返回数组 <code>[cx, cy]</code> ，表示 <strong>信号强度</strong> 最大的 <strong>整数</strong> 坐标点 <code>(cx, cy)</code>如果有多个坐标网络信号一样大，请你返回字典序最小的 <strong>非负</strong> 坐标。</p>\n<p><strong>注意：</strong></p>\n<ul>\n<li>坐标 <code>(x1, y1)</code> 字典序比另一个坐标 <code>(x2, y2)</code> 小，需满足以下条件之一：</li>\n<li><ul>\n<li>要么 <code>x1 &lt; x2</code> ，</li>\n<li>要么 <code>x1 == x2</code> 且 <code>y1 &lt; y2</code></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><code>⌊val⌋</code> 表示小于等于 <code>val</code> 的最大整数（向下取整函数）。</li>\n</ul>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em><img src=\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/10/17/untitled-diagram.png\" alt=\"示例图片\"></p>\n<pre><code>输入：towers = [[1,2,5],[2,1,7],[3,1,9]], radius = 2\n输出：[2,1]\n解释：\n坐标 (2, 1) 信号强度之和为 13\n- 塔 (2, 1) 强度参数为 7 ，在该点强度为 ⌊7 / (1 + sqrt(0)⌋ = ⌊7⌋ = 7\n- 塔 (1, 2) 强度参数为 5 ，在该点强度为 ⌊5 / (1 + sqrt(2)⌋ = ⌊2.07⌋ = 2\n- 塔 (3, 1) 强度参数为 9 ，在该点强度为 ⌊9 / (1 + sqrt(1)⌋ = ⌊4.5⌋ = 4\n没有别的坐标有更大的信号强度。\n</code></pre>\n<p><em>示例2.</em></p>\n<pre><code>输入：towers = [[1,2,13],[2,1,7],[0,1,9]], radius = 2\n输出：[1,2]\n解释：坐标 (1, 2) 的信号强度最大。\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>首先先将塔中x的最大值和最小值还有y的最大值和最小值提取出来，来进行<strong>网格搜索</strong></li>\n<li>然后遍历每个塔求<em>欧式距离</em>看是否再<code>radius</code>之内</li>\n<li><strong>动态</strong>变化最大信号，由于是<em>顺序网格搜索</em>，那么得到的坐标<strong>一定满足最小字典序</strong></li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def bestCoordinate(self, towers: List[List[int]], radius: int) -&gt; List[int]:\n        L &#x3D; len(towers)\n        res_x, res_y, res_q &#x3D; 0, 0, 0\n        m &#x3D; max(t[0] for t in towers)\n        n &#x3D; max(t[1] for t in towers)\n        min_n &#x3D; min(t[0] for t in towers)\n        min_m &#x3D; min(t[1] for t in towers)\n        for i in range(min_m, m + 1):\n            for j in range(min_n, n + 1):\n                tmp &#x3D; 0\n                for k in range(L):\n                    x, y, q &#x3D; towers[k]\n                    if (x - i) ** 2 + (y - j) ** 2 &lt;&#x3D; radius ** 2:\n                        tmp +&#x3D; q &#x2F;&#x2F; (1 + ((x - i) ** 2 + (y - j) ** 2) ** 0.5)\n                if tmp &gt; res_q:\n                    res_q &#x3D; tmp\n                    res_x, res_y &#x3D; i, j\n        return [res_x, res_y]          </code></pre>\n\n","feature":false,"text":"1620.网络信号最好的坐标题目信息 种类 难度 标签 喜欢 算法 Med 枚举 No 题目要求给你一个数组 towers 和一个整数 radius 。 数组 towers 中包含一些网络信号塔，其中 towers[i] = [xi, yi, qi]表示第 i 个网络信号塔的坐标...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"枚举","slug":"枚举","count":2,"path":"api/tags/枚举.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1620-%E7%BD%91%E7%BB%9C%E4%BF%A1%E5%8F%B7%E6%9C%80%E5%A5%BD%E7%9A%84%E5%9D%90%E6%A0%87\"><span class=\"toc-text\">1620.网络信号最好的坐标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第1909题：删除一个元素使数组严格递增","uid":"17a9cc0e2adb98d513ab04262339760c","slug":"LeetCode第1909题：删除一个元素使数组严格递增","date":"2022-11-03T16:00:00.000Z","updated":"2022-11-10T11:13:09.756Z","comments":true,"path":"api/articles/LeetCode第1909题：删除一个元素使数组严格递增.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/04/edc4ca512ad6f067.png","text":"1909.删除一个元素使数组严格递增题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求给你一个下标从 0 开始的整数数组 nums ，如果 恰好 删除 一个 元素后，数组 严格递增 ，那么请你返回 true ，否则返回 false 。如果数组本身已经是严格递增...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":16,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},"next_post":{"title":"LeetCode第1662题：检查两个字符串组是否相等","uid":"7e4e6dc810b8551c74f0419324323453","slug":"LeetCode第1662题：检查两个字符串组是否相等","date":"2022-10-31T16:00:00.000Z","updated":"2022-11-02T13:14:04.501Z","comments":true,"path":"api/articles/LeetCode第1662题：检查两个字符串组是否相等.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/01/84244f736c16d323.png","text":"784.检查两个字符串组是否相等题目信息 种类 难度 标签 喜欢 算法 Easy 模拟 No 题目要求给你两个字符串数组 word1 和 word2 。如果两个数组表示的字符串相同，返回 true ；否则，返回 false 。 数组表示的字符串 是由数组中的所有元素 按顺序 连接...","link":"","photos":[],"count_time":{"symbolsCount":708,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":16,"path":"api/tags/模拟.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false}}