{"title":"LeetCode第46题：全排列","uid":"65ae1f33790760647c8e3c5fb1186386","slug":"LeetCode第46题：全排列","date":"2022-10-19T16:00:00.000Z","updated":"2022-10-20T04:14:48.385Z","comments":true,"path":"api/articles/LeetCode第46题：全排列.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/20/8b8fb6c406772887.png","content":"<h1 id=\"46-全排列\"><a href=\"#46-全排列\" class=\"headerlink\" title=\"46.全排列\"></a>46.全排列</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Med</strong></td>\n<td><strong>回溯，dfs</strong></td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入：nums = [1,2,3]\n输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</code></pre>\n<p><em>示例2.</em></p>\n<pre><code>输入：nums = [0,1]\n输出：[[0,1],[1,0]]\n</code></pre>\n<p><em>示例3.</em></p>\n<pre><code>输入：nums = [1]\n输出：[[1]]\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>类似求排列组合的第一时间应当想到使用<strong>回溯</strong>算法</li>\n<li>但是由于输入规格以及时间复杂的考虑，要进行适当的<strong>剪枝</strong></li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def permute(self, nums: List[int]) -&gt; List[List[int]]:\n        def dfs(nums, path, depth, res, used, size):\n            if depth &#x3D;&#x3D; size:\n                res.append(path[:]) #进行一个copy的操作\n                return\n            for i in range(size):\n                if not used[i]: # 剪枝\n                    used[i] &#x3D; True\n                    path.append(nums[i])\n                    dfs(nums, path, depth + 1, res, used, size)\n                    used[i] &#x3D; False\n                    path.pop()\n        size &#x3D; len(nums)\n        path &#x3D; []\n        depth &#x3D; 0\n        res &#x3D; []\n        used &#x3D; [False for _ in range(size)]\n        dfs(nums, path, depth, res, used, size)\n        # num传入的要求排列的数组，path是回溯时产生的排列数组，深度时来判断是否到达了底部要进行返回，used时判断当前元素是否用过进行剪枝，size时输入数组大小\n        return res</code></pre>\n\n","feature":true,"text":"46.全排列题目信息 种类 难度 标签 喜欢 算法 Med 回溯，dfs Yes 题目要求给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。 示例示例1. 输入：nums = [1,2,3] 输出：[[1,2,3],[1,3,2],...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"},{"name":"回溯","slug":"回溯","count":1,"path":"api/tags/回溯.json"},{"name":"dfs","slug":"dfs","count":1,"path":"api/tags/dfs.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#46-%E5%85%A8%E6%8E%92%E5%88%97\"><span class=\"toc-text\">46.全排列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第34题：字符串相乘","uid":"050abb7935ed5ccefb3818c06b82ad20","slug":"LeetCode第34题：字符串相乘","date":"2022-10-19T16:00:00.000Z","updated":"2022-10-20T03:57:47.952Z","comments":true,"path":"api/articles/LeetCode第34题：字符串相乘.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/20/8b8fb6c406772887.png","text":"34.字符串相乘题目信息 种类 难度 标签 喜欢 算法 Med 字符串 No 题目要求给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。 注意： 不能使用任何内置的 BigInteger 库或直接将输入...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},"next_post":{"title":"LeetCode第58题：最后一个单词的长度","uid":"ddc869d01de5d4c0cf61eb64cfb85599","slug":"LeetCode第58题：最后一个单词的长度","date":"2022-10-19T16:00:00.000Z","updated":"2022-10-20T04:15:17.938Z","comments":true,"path":"api/articles/LeetCode第58题：最后一个单词的长度.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/20/8b8fb6c406772887.png","text":"46.全排列题目信息 种类 难度 标签 喜欢 算法 Easy 字符串 No 题目要求给你一个字符串s，由若干单词组成，单词前后用一些空格字符隔开。返回字符串中 最后一个单词的长度。 单词 是指仅由字母组成、不包含任何空格字符的最大子字符串。 示例示例1. 输入：s = &quot...","link":"","photos":[],"count_time":{"symbolsCount":482,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"字符串","slug":"字符串","count":7,"path":"api/tags/字符串.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false}}