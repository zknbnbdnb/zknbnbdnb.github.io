{"title":"LeetCode第33题：搜索旋转排序数组","uid":"abd31ef79b2cfb8b01bf4c9895fea23c","slug":"LeetCode第33题：搜索旋转排序数组","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-19T06:50:20.758Z","comments":true,"path":"api/articles/LeetCode第33题：搜索旋转排序数组.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/19/951c8e1acd9f8324.png","content":"<h1 id=\"33-搜索旋转排序数组\"><a href=\"#33-搜索旋转排序数组\" class=\"headerlink\" title=\"33.搜索旋转排序数组\"></a>33.搜索旋转排序数组</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Med</strong></td>\n<td><strong>二分查找</strong></td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>整数数组 <code>nums</code> 按升序排列，数组中的值 <strong>互不相同</strong> 。</p>\n<p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong>，使数组变为 <code>[nums[k], nums[k+1],..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,5,6,7]</code> 在下标 <code>3</code> 处经旋转后可能变为 <code>[4,5,6,7,0,1,2]</code> 。</p>\n<p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回它的下标，否则返回 <code>-1</code>。</p>\n<p>你必须设计一个时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入：nums = [4,5,6,7,0,1,2], target = 0\n输出：4\n</code></pre>\n<p><em>示例2.</em></p>\n<pre><code>输入：nums = [4,5,6,7,0,1,2], target = 3\n输出：-1\n</code></pre>\n<p><em>示例3.</em></p>\n<pre><code>输入：nums = [1], target = 0\n输出：-1\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>使用<strong>二分查找</strong>，因为二分查找时间复杂度为<em>logn</em>，但是要<strong>有序</strong>才能使用二分查找</li>\n<li>看题意可知此旋转的数组时<em>一半一半有序</em>，使用只需分左半边和右半边进行<strong>分类讨论</strong></li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def search(self, nums: List[int], target: int) -&gt; int:\n        l, r &#x3D; 0, len(nums) - 1\n        while l &lt;&#x3D; r:\n            mid &#x3D; (l + r) &#x2F;&#x2F; 2\n            if nums[mid] &#x3D;&#x3D; target:\n                return mid  \n            elif nums[l] &lt;&#x3D; nums[mid]:#左半边有序的情况\n                if target &gt;&#x3D; nums[l] and target &lt; nums[mid]:\n                    r &#x3D; mid - 1 #大了，右边界缩小\n                else:\n                    l &#x3D; mid + 1 #小了， 左边界放大\n            else:\n                if target &lt;&#x3D; nums[r] and target &gt; nums[mid]:#右半边有序的情况\n                    l &#x3D; mid + 1\n                else:\n                    r &#x3D; mid - 1\n        return -1</code></pre>\n\n","feature":true,"text":"33.搜索旋转排序数组题目信息 种类 难度 标签 喜欢 算法 Med 二分查找 Yes 题目要求整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知的某个下标 k（0 &lt;= k &lt; nums.length）上进行了 旋转，使...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"},{"name":"二分查找","slug":"二分查找","count":3,"path":"api/tags/二分查找.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#33-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">33.搜索旋转排序数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第2374题：边积分最高的节点","uid":"c02a0d58d02f45cdce74135318840401","slug":"LeetCode第2374题：边积分最高的节点","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-18T15:33:29.131Z","comments":true,"path":"api/articles/LeetCode第2374题：边积分最高的节点.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/18/df16dbe7137bddd5.png","text":"2374.边积分最高的节点题目信息 种类 难度 标签 喜欢 算法 Med 数组 No 题目要求给你一个有向图，图中有 n 个节点，节点编号从 0 到 n - 1 ，其中每个节点都 恰有一条 出边。 图由一个下标从 0 开始、长度为 n 的整数数组 edges 表示，其中 edge...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"数组","slug":"数组","count":6,"path":"api/tags/数组.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},"next_post":{"title":"LeetCode第48题：旋转图像","uid":"adfd5027038714fb32b438d9a0748c32","slug":"LeetCode第48题：旋转图像","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-20T04:12:28.947Z","comments":true,"path":"api/articles/LeetCode第48题：旋转图像.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/19/951c8e1acd9f8324.png","text":"48.旋转图像题目信息 种类 难度 标签 喜欢 算法 Med 数组 No 题目要求给定一个 n × n 的二维矩阵 matrix 表示一个图像。请你将图像顺时针旋转 90 度。 你必须在 原地 旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要 使用另一个矩阵来旋转图像。 示...","link":"","photos":[],"count_time":{"symbolsCount":800,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"数组","slug":"数组","count":6,"path":"api/tags/数组.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false}}