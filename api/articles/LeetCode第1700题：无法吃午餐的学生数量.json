{"title":"LeetCode第x题：x","uid":"18ba4601c07e45b1b8afaa7828c586ff","slug":"LeetCode第1700题：无法吃午餐的学生数量","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-19T06:55:10.231Z","comments":true,"path":"api/articles/LeetCode第1700题：无法吃午餐的学生数量.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/19/951c8e1acd9f8324.png","content":"<h1 id=\"2376-统计特殊整数\"><a href=\"#2376-统计特殊整数\" class=\"headerlink\" title=\"2376.统计特殊整数\"></a>2376.统计特殊整数</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Easy</strong></td>\n<td><strong>栈，模拟</strong></td>\n<td><strong>No</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>学校的自助午餐提供圆形和方形的三明治，分别用数字 <code>0</code> 和 <code>1</code> 表示。所有学生站在一个队列里，每个学生要么喜欢圆形的要么喜欢方形的。</p>\n<p>餐厅里三明治的数量与学生的数量相同。所有三明治都放在一个 <strong>栈</strong> 里，每一轮：</p>\n<ul>\n<li>如果队列最前面的学生 <strong>喜欢</strong> 栈顶的三明治，那么会 <strong>拿走它</strong> 并离开队列。</li>\n<li>否则，这名学生会 <strong>放弃这个三明治</strong> 并回到队列的尾部。</li>\n</ul>\n<p>这个过程会一直持续到队列里所有学生都不喜欢栈顶的三明治为止。</p>\n<p>给你两个整数数组 <code>students</code> 和 <code>sandwiches</code>，其中 <code>sandwiches[i]</code> 是栈里面第 <code>i</code> 个三明治的类型（<code>i = 0</code> 是栈的顶部）， <code>students[j]</code> 是初始队。列里第 <code>j</code> 名学生对三明治的喜好（<code>j = 0</code> 是队列的最开始位置）。请你返回无法吃午餐的学生数量。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入：students = [1,1,0,0], sandwiches = [0,1,0,1]\n输出：0 \n解释：\n- 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [1,0,0,1]。\n- 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [0,0,1,1]。\n- 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [0,1,1]，三明治栈为 sandwiches = [1,0,1]。\n- 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [1,1,0]。\n- 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [1,0]，三明治栈为 sandwiches = [0,1]。\n- 最前面的学生放弃最顶上的三明治，并回到队列的末尾，学生队列变为 students = [0,1]。\n- 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = [1]，三明治栈为 sandwiches = [1]。\n- 最前面的学生拿走最顶上的三明治，剩余学生队列为 students = []，三明治栈为 sandwiches = []。\n所以所有学生都有三明治吃。\n</code></pre>\n<p><em>示例2.</em></p>\n<pre><code>输入：students = [1,1,1,0,0,1], sandwiches = [1,0,0,0,1,1]\n输出：3 \n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>读懂题意进行<strong>模拟</strong>即可，第一个if判断如果<strong>只有一种学生</strong>但是有多种三明治，则直接退出循环，因为再学生为<code>[1, 1, 1]</code>但三明治为<code>[0, 1, 1]</code>时怎么排队都无法拿去第一个三明治</li>\n<li>第二个if模拟排队过程，<strong>出栈底元素再将他入栈</strong>，最后一个判断是当匹配条件的时候，学生拿走三明治然后计数加一</li>\n<li>最后返回长度减去计数即可，若是第一个学生和第一个三明治匹配就返回长度减去计数再减一，<em>防止只剩最后一个学生没判断上</em></li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def countStudents(self, students: List[int], sandwiches: List[int]) -&gt; int:\n        length &#x3D; len(students)\n        count &#x3D; 0\n        while len(students) &gt; 1:\n            if len(set(students)) &#x3D;&#x3D; 1 and students[0] !&#x3D; sandwiches[0]:\n                break\n            if students[0] !&#x3D; sandwiches[0]:\n                students.append(students.pop(0))\n                continue\n            else:\n                students.pop(0)\n                sandwiches.pop(0)\n                count +&#x3D; 1\n        return length - count if students[0] !&#x3D; sandwiches[0] else length - count - 1</code></pre>\n\n","feature":false,"text":"2376.统计特殊整数题目信息 种类 难度 标签 喜欢 算法 Easy 栈，模拟 No 题目要求学校的自助午餐提供圆形和方形的三明治，分别用数字 0 和 1 表示。所有学生站在一个队列里，每个学生要么喜欢圆形的要么喜欢方形的。 餐厅里三明治的数量与学生的数量相同。所有三明治都放在...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":16,"path":"api/tags/模拟.json"},{"name":"栈","slug":"栈","count":4,"path":"api/tags/栈.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2376-%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%95%B4%E6%95%B0\"><span class=\"toc-text\">2376.统计特殊整数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第1012题：至少有1为重复的数字","uid":"2f29bc9f36642c684480423dd6e71762","slug":"LeetCode第1012题：至少有1为重复的数字","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-18T15:35:57.980Z","comments":true,"path":"api/articles/LeetCode第1012题：至少有1为重复的数字.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/18/df16dbe7137bddd5.png","text":"1012.至少有1为重复的数字题目信息 种类 难度 标签 喜欢 算法 Hard 数位dp Yes 题目要求给定正整数 n，返回在 [1, n] 范围内具有 至少 1 位 重复数字的正整数的个数。 示例示例1. 输入：n = 20 输出：1 解释：具有至少 1 位重复数字的正数（&...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"动态规划","slug":"动态规划","count":9,"path":"api/tags/动态规划.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"},{"name":"数位dp","slug":"数位dp","count":3,"path":"api/tags/数位dp.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":true},"next_post":{"title":"LeetCode第2373题：矩阵局部最大值","uid":"9eb1bd5b03774bfeca70051c02665fcc","slug":"LeetCode第2373题：矩阵局部最大值","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-18T15:33:31.091Z","comments":true,"path":"api/articles/LeetCode第2373题：矩阵局部最大值.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/18/df16dbe7137bddd5.png","text":"2373.矩阵局部最大值题目信息 种类 难度 标签 喜欢 算法 Easy 矩阵 No 题目要求给你一个大小为 n x n 的整数矩阵 grid 。 生成一个大小为 (n - 2) x (n - 2) 的整数矩阵 maxLocal ，并满足： maxLocal[i][j] 等于 g...","link":"","photos":[],"count_time":{"symbolsCount":978,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":61,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":62,"path":"api/tags/力扣.json"},{"name":"矩阵","slug":"矩阵","count":1,"path":"api/tags/矩阵.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false}}