{"title":"LeetCode第33题：搜索旋转排序数组 II","uid":"b846fdcd170df4cd2690cf94865d978d","slug":"LeetCode第81题：搜索旋转排序数组 II","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-19T06:53:08.167Z","comments":true,"path":"api/articles/LeetCode第81题：搜索旋转排序数组 II.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/19/951c8e1acd9f8324.png","content":"<h1 id=\"33-搜索旋转排序数组-II\"><a href=\"#33-搜索旋转排序数组-II\" class=\"headerlink\" title=\"33.搜索旋转排序数组  II\"></a>33.搜索旋转排序数组  II</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Med</strong></td>\n<td><strong>二分查找</strong></td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>整数数组 <code>nums</code> 按升序排列，数组中的值 <strong>互不相同</strong> 。</p>\n<p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong>，使数组变为 <code>[nums[k], nums[k+1],..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,4,4,5,6,6,7]</code> 在下标 <code>5</code> 处经旋转后可能变为 <code>[4,5,6,6,7,0,1,2,4,4]</code> 。</p>\n<p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回<code>true</code>，否则返回 <code>false</code>。</p>\n<p>你必须尽可能减少整个操作步骤。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入：nums = [2,5,6,0,0,1,2], target = 0\n输出：true\n</code></pre>\n<p><em>示例2.</em></p>\n<pre><code>输入：nums = [2,5,6,0,0,1,2], target = 3\n输出：false\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>与33题类似，但是因为可能出现重复元素，使用当中间与前后两端的l，r对应的值相同时要l+1和r-1来缩小范围确定查找区间</li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def search(self, nums: List[int], target: int) -&gt; bool:\n        l, r &#x3D; 0, len(nums) - 1\n        while l &lt;&#x3D; r:\n            mid &#x3D; (l + r) &#x2F;&#x2F; 2\n            if nums[mid] &#x3D;&#x3D; target:\n                return True  \n            if nums[mid] &#x3D;&#x3D; nums[l] &#x3D;&#x3D; nums[r]:\n                l +&#x3D; 1\n                r -&#x3D; 1\n            elif nums[l] &lt;&#x3D; nums[mid]:#左半边有序的情况\n                if target &gt;&#x3D; nums[l] and target &lt; nums[mid]:\n                    r &#x3D; mid - 1 #大了，右边界缩小\n                else:\n                    l &#x3D; mid + 1 #小了， 左边界放大\n            else:\n                if target &lt;&#x3D; nums[r] and target &gt; nums[mid]:#右半边有序的情况\n                    l &#x3D; mid + 1\n                else:\n                    r &#x3D; mid - 1\n        return False</code></pre>\n\n","feature":true,"text":"33.搜索旋转排序数组 II题目信息 种类 难度 标签 喜欢 算法 Med 二分查找 Yes 题目要求整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知的某个下标 k（0 &lt;= k &lt; nums.length）上进行了 旋...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":63,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":64,"path":"api/tags/力扣.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"},{"name":"二分查找","slug":"二分查找","count":3,"path":"api/tags/二分查找.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#33-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84-II\"><span class=\"toc-text\">33.搜索旋转排序数组  II</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"LeetCode第796题：旋转字符串","uid":"c30798b33e66c8d20737c478b69704f2","slug":"LeetCode第796题：旋转字符串","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-19T04:02:01.342Z","comments":true,"path":"api/articles/LeetCode第796题：旋转字符串.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/19/951c8e1acd9f8324.png","text":"796.旋转字符串题目信息 种类 难度 标签 喜欢 算法 Easy 字符串 No 题目要求给定两个字符串, s 和 goal。如果在若干次旋转操作之后，s 能变成 goal ，那么返回 true 。 s 的 旋转操作 就是将 s 最左边的字符移动到最右边。 例如, 若 s = &...","link":"","photos":[],"count_time":{"symbolsCount":558,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":63,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":64,"path":"api/tags/力扣.json"},{"name":"字符串","slug":"字符串","count":8,"path":"api/tags/字符串.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},"next_post":{"title":"LeetCode第902题：最大为N的数字组合","uid":"fa6eed31fec0f134d367ea17142dbc3e","slug":"LeetCode第902题：最大为N的数字组合","date":"2022-10-17T16:00:00.000Z","updated":"2022-10-18T15:36:03.258Z","comments":true,"path":"api/articles/LeetCode第902题：最大为N的数字组合.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/10/18/df16dbe7137bddd5.png","text":"9902.最大为N的数字组合题目信息 种类 难度 标签 喜欢 算法 Hard 数位dp Yes 题目要求给定一个按 非递减顺序 排列的数字数组digits。你可以用任意次数digits[i]来写的数字。例如，如果digits = [&#39;1&#39;,&#39;3&#39;,...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":63,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":64,"path":"api/tags/力扣.json"},{"name":"动态规划","slug":"动态规划","count":9,"path":"api/tags/动态规划.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"},{"name":"数位dp","slug":"数位dp","count":3,"path":"api/tags/数位dp.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":true}}