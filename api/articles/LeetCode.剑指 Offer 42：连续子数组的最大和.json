{"title":"剑指 Offer 42：连续子数组的最大和","uid":"84d086517d5e8e557bbfd2c6d7a2b89a","slug":"LeetCode.剑指 Offer 42：连续子数组的最大和","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-10T11:13:04.693Z","comments":true,"path":"api/articles/LeetCode.剑指 Offer 42：连续子数组的最大和.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/10/c07036a6e1c46274.png","content":"<h1 id=\"剑指-Offer-42-连续子数组的最大和\"><a href=\"#剑指-Offer-42-连续子数组的最大和\" class=\"headerlink\" title=\"剑指 Offer 42.连续子数组的最大和\"></a>剑指 Offer 42.连续子数组的最大和</h1><h2 id=\"题目信息\"><a href=\"#题目信息\" class=\"headerlink\" title=\"题目信息\"></a>题目信息</h2><table>\n<thead>\n<tr>\n<th><strong>种类</strong></th>\n<th><strong>难度</strong></th>\n<th><strong>标签</strong></th>\n<th><strong>喜欢</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>算法</strong></td>\n<td><strong>Easy</strong></td>\n<td><strong>动态规划</strong></td>\n<td><strong>Yes</strong></td>\n</tr>\n</tbody></table>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。</p>\n<p>要求时间复杂度为O(n)。</p>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><em>示例1.</em></p>\n<pre><code>输入: nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出: 6\n解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。\n</code></pre>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ul>\n<li>这道题与力扣的第53题一模一样，要求O(n)解决问题那就能想到使用<strong>动态规划</strong></li>\n<li>由于是<em>子数组</em>，所以必定<em>连续</em></li>\n<li>状态转移方程就为，<code>dp[i] = max(dp[i - 1] + nums[i], nums[i])</code></li>\n<li>即选择将上一个状态加上当前值还是舍去上个状态直接使用当前值</li>\n<li>最后返回<strong>最大值</strong>即可</li>\n</ul>\n<h3 id=\"代码参考\"><a href=\"#代码参考\" class=\"headerlink\" title=\"代码参考\"></a>代码参考</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">class Solution:\n    def maxSubArray(self, nums: List[int]) -&gt; int:\n        dp &#x3D; [0] * len(nums)\n        dp[0] &#x3D; nums[0]\n        for i in range(1, len(nums)):\n            dp[i] &#x3D; max(dp[i-1] + nums[i], nums[i])\n        return max(dp)</code></pre>\n\n","feature":false,"text":"剑指 Offer 42.连续子数组的最大和题目信息 种类 难度 标签 喜欢 算法 Easy 动态规划 Yes 题目要求输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。 要求时间复杂度为O(n)。 示例示例1. 输入: nums = [-2,1...","link":"","photos":[],"count_time":{"symbolsCount":609,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"动态规划","slug":"动态规划","count":9,"path":"api/tags/动态规划.json"},{"name":"Like","slug":"Like","count":23,"path":"api/tags/Like.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%91%E6%8C%87-Offer-42-%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C\"><span class=\"toc-text\">剑指 Offer 42.连续子数组的最大和</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">题目信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%8F%82%E8%80%83\"><span class=\"toc-text\">代码参考</span></a></li></ol></li></ol></li></ol>","author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"mapped":true,"prev_post":{"title":"剑指 Offer 25：合并两个排序链表","uid":"2d866382aa9c0f3cdb8e9586bd9935ea","slug":"LeetCode.剑指 Offer 25：合并两个排序链表","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-10T11:13:29.328Z","comments":true,"path":"api/articles/LeetCode.剑指 Offer 25：合并两个排序链表.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/10/c07036a6e1c46274.png","text":"剑指 Offer 25.合并两个排序链表题目信息 种类 难度 标签 喜欢 算法 Easy 模拟，链表 No 题目要求输入两个递增排序的链表，合并这两个链表并使新链表中的节点仍然是递增排序的。 示例1： 示例示例1. 输入：1-&gt;2-&gt;4, 1-&gt;3-&gt;4 ...","link":"","photos":[],"count_time":{"symbolsCount":692,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"模拟","slug":"模拟","count":16,"path":"api/tags/模拟.json"},{"name":"链表","slug":"链表","count":7,"path":"api/tags/链表.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false},"next_post":{"title":"剑指 Offer 57：和为s的两个数字","uid":"6c334965e14971416bbd7dc158f576f8","slug":"LeetCode.剑指 Offer 57：和为s的两个数字","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-10T11:13:07.593Z","comments":true,"path":"api/articles/LeetCode.剑指 Offer 57：和为s的两个数字.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/11/10/c07036a6e1c46274.png","text":"剑指 Offer 57.和为s的两个数字题目信息 种类 难度 标签 喜欢 算法 Easy 二分查找 No 题目要求输入一个递增排序的数组和一个数字s，在数组中查找两个数，使得它们的和正好是s。如果有多对数字的和等于s，则输出任意一对即可。 示例示例1. 输入：nums = [2,...","link":"","photos":[],"count_time":{"symbolsCount":703,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":62,"path":"api/categories/算法.json"}],"tags":[{"name":"力扣","slug":"力扣","count":63,"path":"api/tags/力扣.json"},{"name":"二分查找","slug":"二分查找","count":3,"path":"api/tags/二分查找.json"}],"author":{"name":"秋水","slug":"blog-author","avatar":"https://s3.bmp.ovh/imgs/2022/10/15/5e1d058ce90012ff.jpg","link":"/","description":"一个喜欢打游戏偶尔敲敲代码的懒狗","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/GitHub.svg","link":"https://github.com/zknbnbdnb"},"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zkdnb/"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/26324722"}}}},"feature":false}}